<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.totalplay.usuarios.dao.SelectDao">

	<select id="getStatus" resultType="StatsuVo">
		SELECT
			DUMMY MESSAGE,
			TO_CHAR(SYSDATE, 'DD/MM/YYYY') DATES
		FROM DUAL
	</select>

	<select id="getAllUser" resultType="UserModel">
		SELECT
			TPGUID ID,
			USERNAME,
			TPGCUID areaID,
			MAIL email,
			NAME,
			ENABLED,
			TO_CHAR(CREATED, 'DD/MM/YYYY HH24:MI') CREATED
		FROM TPG_USUARIOS
			WHERE TPGUID  <![CDATA[<>]]> 0
	</select>
	
	<select id="getUser" resultType="UserModel">
		SELECT
			TPGUID ID,
			USERNAME,
			TPGCUID areaID,
			MAIL email,
			NAME,
			ENABLED,
			TO_CHAR(CREATED, 'DD/MM/YYYY HH24:MI') CREATED
		FROM TPG_USUARIOS
			WHERE TPGUID  = #{id} OR USERNAME = #{id}
	</select>

	<select id="getRole" resultType="String">
		SELECT
			TR.ROLE
		FROM TPG_ROLE TR
			INNER JOIN TPG_USERROLE TUR ON TR.TPGRID = TUR.TPGRID
		WHERE TUR.TPGUID = #{id}
	</select>

	<select id="getRoles" resultType="CatalogoModel">
		SELECT
			TPGRID ID,
			ROLE,
			DESCRIPCION,
			ENABLED
		FROM TPG_ROLE
	</select>

	<delete id="deleteRole">
		DELETE
			FROM TPG_USERROLE
		WHERE TPGUID = #{id}
	</delete>

	<insert id="setUser" useGeneratedKeys="true" keyProperty="user.id" keyColumn="TPGUID">
		INSERT INTO TPG_USUARIOS(
			TPGUID,
			USERNAME,
			NAME,
			PASSWORD,
			CREATED,
			TPGCUID,
			MAIL
		)VALUES(
			STPGUID.NEXTVAL,
			#{user.username},
			#{user.name},
			#{user.password},
			SYSDATE,
			#{user.areaID},
			#{user.email}
		)
	</insert>

	<insert id="setUserRole">
		INSERT INTO TPG_USERROLE(
			TPGUID,
			TPGRID
		)VALUES(
			#{iduser},
			#{idrole}
		)
	</insert>
	
	<insert id="setUserAreas">
		INSERT INTO TPGC_USUARIOS_AREAS(
			TPGC_USUARIOS_ID,
			TPGUID,
			TPGCUID
		)VALUES(
			TPGCUSUARIOSAREAS_sequ.NEXTVAL,
			#{user.tpguid},
			#{user.tpgcuid}
		)
	</insert>
	
	<update id="updateUser" >
		UPDATE TPG_USUARIOS SET
			USERNAME = #{user.username},
			NAME = #{user.name},
			<if test="user.password != null">
				PASSWORD = #{user.password},
			</if>	
			ENABLED = 1,		
			MODIFIED = SYSDATE
		WHERE TPGUID = #{user.id}
	</update>
	
	<update id="deleteUser" parameterType="Integer">
		UPDATE TPG_USUARIOS SET
			ENABLED = 0,
			MODIFIED = SYSDATE
		WHERE TPGUID = #{id}
	</update>
	
	<insert id="addUserRelationShip">
		INSERT INTO TPG_USUARIOS_RELACION(
			TPGUSUARIOSID,
			TPGCUID_AD,
			TPGCUID_OP
		)VALUES(
			TPGUSUARIOSREL_seq.NEXTVAL,
			#{user.tpguid_ad},
			#{user.tpguid_op}
		)
	</insert>
	
	<select id="getUserByEstado" resultType="UserModel">
		       <!-- select DISTINCT TU.USERNAME,
		         TU.NAME
		         FROM TPG_USUARIOS TU 
		         INNER JOIN tpgc_usuarios_areas ON 
		         (TU.TPGUID = '3'  AND tpgc_usuarios_areas.tpgcuid = #{id))}-->
		        
		        select TPG_USUARIOS.username, 
		        TPG_USUARIOS.NAME 
		        FROM TPG_USERROLE 
		        INNER JOIN TPG_USUARIOS ON (TPG_USERROLE.TPGUID = TPG_USUARIOS.tpguid and TPG_USERROLE.tpgrid = '3')

	</select>
	
	<select id="getUserByAdmin" resultType="UserModel">
		        select TPG_USUARIOS.username, 
		        TPG_USUARIOS.NAME,
                tpg_usuarios.mail email
		        FROM TPG_USUARIOS 
		        INNER JOIN tpg_usuarios_relacion ON (tpg_usuarios.username = tpg_usuarios_relacion.tpgcuid_op and tpg_usuarios_relacion.tpgcuid_ad = #{id} and tpg_usuarios.enabled = '1')

	</select>
	
	
	 <update id="updateUsr" >
		UPDATE TPG_USUARIOS 
		    SET NAME = #{user.name},
		    	MAIL = #{user.email},
		    	ENABLED = #{user.enabled}
		where
            USERNAME = #{user.username}
	</update>
	
	<select id="recoverEmailUser" resultType="UserModel">
		SELECT
			TPGUID ID,
			USERNAME,
			TPGCUID areaID,
			MAIL email,
			NAME,
			ENABLED,
			TO_CHAR(CREATED, 'DD/MM/YYYY HH24:MI') CREATED,
			PASSWORD
		FROM TPG_USUARIOS
			WHERE MAIL  = #{id} OR USERNAME = #{id}
	</select>
	
	 <update id="changePass" >
		UPDATE TPG_USUARIOS 
		    SET PASSWORD = #{user.password}
		where
            USERNAME = #{user.username}
	</update>
</mapper>